# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '53cfa355-a107-4e4e-b10e-10f51267f1c4'
  imageRepository: 'kubernetescicd'
  containerRegistry: 'myacr3210.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    steps:

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: HelmInstaller@0
      inputs:
        helmVersion: '3.8.2'
        installKubectl: true
    


 displayName: Deploy stage
  dependsOn: Build


# Continuous Deployment Process To Kubernetes
- stage: DeployToKubernetesCluster
  dependsOn: Build
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
    displayName: Deploy to Kubernetes
    strategy:
      runOnce:
        deploy:
          steps:

          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'KubernetesConnection'
              secretType: 'dockerRegistry'
              secretName: 'react-app-prod'
              dockerRegistryEndpoint: 'myACR3210'


          - task: HelmDeploy@0
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: 'Azure Pass - Sponsorship(ecc36c1d-699d-4305-abf3-52e1d36dfe24)'
              azureResourceGroup: 'AKS_Group'
              kubernetesCluster: 'GuyAKS'
              command: 'install'
              chartType: 'FilePath'
              chartPath: '$(Build.SourcesDirectory)/k8schart'
          


